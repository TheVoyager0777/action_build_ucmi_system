name: build_cas_system_OneDrivePush -T - test
on:
  workflow_dispatch:
    inputs:
      URL:
        description: "待操作的系统包下载地址"
        required: true
        default: https://hugeota.d.miui.com/V13.1.22.10.19.DEV/miui_MUNCH_V13.1.22.10.19.DEV_ec054d7314_13.0.zip
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@master
      - name: 1.准备环境
        run: |
          echo "date=$(echo ${{ github.event.inputs.URL }} | cut -d"/" -f4)" >> $GITHUB_ENV
          echo "device=cas" >> $GITHUB_ENV
          echo "ORIGN_ZIP_NAME=miui_CASPRE_22.10.19_186d7d9030_12.0.zip" >> $GITHUB_ENV
          sudo apt install python3 python3-pip aria2 zip p7zip-full tar zipalign zstd
          sudo apt --fix-broken install
          sudo apt update --fix-missing
          pip3 install --upgrade pip
          pip3 install pycryptodome
          pip3 install setuptools
          pip3 install docopt
          pip3 install requests
          pip3 install beautifulsoup4
          pip3 install --ignore-installed pyyaml
          curl https://rclone.org/install.sh | sudo bash
          mkdir -p ~/.config/rclone/
          unzip -P ${{ secrets.PASSWORD }} "$GITHUB_WORKSPACE"/tools/rclone.zip -d ~/.config/rclone/
      - name: 2.发送开始构建通知
        run: |
              #curl -i -X POST -H 'Content-type':'application/json' -d '{"token":"${{ secrets.appToken2 }}","title":"小米10 Ultra ${{ env.date }}开始构建","content":" **小米10 Ultra ${{ env.date }}开始构建** ","topic":"umi","template":"markdown"}' http://www.pushplus.plus/send || true
              echo 开始打包
      - name: 3.下载系统包
        run: |
          aria2c -x16 -j$(nproc) -U "Mozilla/5.0" -d "$GITHUB_WORKSPACE" ${{ github.event.inputs.URL }}
          aria2c -x16 -j$(nproc) -U "Mozilla/5.0" -d "$GITHUB_WORKSPACE" https://hugeota.d.miui.com/22.10.19/miui_CASPRE_22.10.19_186d7d9030_12.0.zip
      - name: 4.解包
        run: |
          sudo chmod 777 "$GITHUB_WORKSPACE"/tools/payload-dumper-go
          sudo chmod 777 "$GITHUB_WORKSPACE"/tools/brotli
          mkdir -p "$GITHUB_WORKSPACE"/MUNCH
          mkdir -p "$GITHUB_WORKSPACE"/${{ env.device }}
          mkdir -p "$GITHUB_WORKSPACE"/images
          mkdir -p "$GITHUB_WORKSPACE"/simages
          mkdir -p "$GITHUB_WORKSPACE"/zip
          mkdir -p "$GITHUB_WORKSPACE"/firmware
          ZIP_NAME_MUNCH=$(echo ${{ github.event.inputs.URL }} | cut -d"/" -f5)
          7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_MUNCH -r -o"$GITHUB_WORKSPACE"/MUNCH
          rm -rf "$GITHUB_WORKSPACE"/$ZIP_NAME_MUNCH
          7z x "$GITHUB_WORKSPACE"/${{ env.ORIGN_ZIP_NAME }} -r -o"$GITHUB_WORKSPACE"/${{ env.device }} firmware-update
          7z x "$GITHUB_WORKSPACE"/${{ env.ORIGN_ZIP_NAME }} -r -o"$GITHUB_WORKSPACE"/${{ env.device }} boot.img
          for i in odm vendor; do
              7z x "$GITHUB_WORKSPACE"/${{ env.ORIGN_ZIP_NAME }} -o"$GITHUB_WORKSPACE"/${{ env.device }} $i.transfer.list
              7z x "$GITHUB_WORKSPACE"/${{ env.ORIGN_ZIP_NAME }} -o"$GITHUB_WORKSPACE"/${{ env.device }} $i.patch.dat
              7z x "$GITHUB_WORKSPACE"/${{ env.ORIGN_ZIP_NAME }} -o"$GITHUB_WORKSPACE"/${{ env.device }} $i.new.dat.br
              "$GITHUB_WORKSPACE"/tools/brotli -d "$GITHUB_WORKSPACE"/${{ env.device }}/$i.new.dat.br
              rm -rf "$GITHUB_WORKSPACE"/${{ env.device }}/$i.new.dat.br
              python3 "$GITHUB_WORKSPACE"/tools/sdat2img.py "$GITHUB_WORKSPACE"/${{ env.device }}/$i.transfer.list "$GITHUB_WORKSPACE"/${{ env.device }}/$i.new.dat "$GITHUB_WORKSPACE"/${{ env.device }}/$i.img
              rm -rf "$GITHUB_WORKSPACE"/${{ env.device }}/$i.patch.dat
              rm -rf "$GITHUB_WORKSPACE"/${{ env.device }}/$i.transfer.list
              rm -rf "$GITHUB_WORKSPACE"/${{ env.device }}/$i.new.dat
          done
          sudo python3 "$GITHUB_WORKSPACE"/tools/imgextractorLinux.py "$GITHUB_WORKSPACE"/${{ env.device }}/vendor.img "$GITHUB_WORKSPACE"/${{ env.device }}
          rm -rf "$GITHUB_WORKSPACE"/${{ env.device }}/vendor.img
          for i in system product; do
              "$GITHUB_WORKSPACE"/tools/payload-dumper-go -p $i "$GITHUB_WORKSPACE"/MUNCH/payload.bin
              mv "$GITHUB_WORKSPACE"/payload/$i.img "$GITHUB_WORKSPACE"/images/$i.img
              sudo python3 "$GITHUB_WORKSPACE"/tools/imgextractorLinux.py "$GITHUB_WORKSPACE"/images/$i.img "$GITHUB_WORKSPACE"/images
              rm -rf "$GITHUB_WORKSPACE"/images/$i.img
          done

          "$GITHUB_WORKSPACE"/tools/payload-dumper-go -p system_ext "$GITHUB_WORKSPACE"/MUNCH/payload.bin
          mv "$GITHUB_WORKSPACE"/payload/system_ext.img "$GITHUB_WORKSPACE"/images/system_ext.img

          "$GITHUB_WORKSPACE"/tools/payload-dumper-go -p vendor "$GITHUB_WORKSPACE"/MUNCH/payload.bin
          mv "$GITHUB_WORKSPACE"/payload/vendor.img "$GITHUB_WORKSPACE"/images/vendor_munch.img
          sudo python3 "$GITHUB_WORKSPACE"/tools/imgextractorLinux.py "$GITHUB_WORKSPACE"/images/vendor_munch.img "$GITHUB_WORKSPACE"/images
          rm -rf "$GITHUB_WORKSPACE"/images/vendor_munch.img
          rm -rf "$GITHUB_WORKSPACE"/payload
          rm -rf "$GITHUB_WORKSPACE"/MUNCH
          rm -rf "$GITHUB_WORKSPACE"/${{ env.ORIGN_ZIP_NAME }}
      - name: 5.替换相关文件
        run: |
          # 替换为K40S的selinux
          #sudo rm -rf "$GITHUB_WORKSPACE"/${{ env.device }}/vendor/etc/selinux
          sudo mv -f "$GITHUB_WORKSPACE"/images/vendor_munch/etc/selinux "$GITHUB_WORKSPACE"/${{ env.device }}/vendor/etc/selinux
          sudo rm -rf "$GITHUB_WORKSPACE"/images/vendor_munch
          # 修改cas的/vendor/build.prop
          sudo sed -i 's/ro.build.version.release=12/ro.build.version.release=13/g' "$GITHUB_WORKSPACE"/${{ env.device }}/vendor/build.prop
          sudo sed -i 's/ro.vendor.build.version.release=12/ro.vendor.build.version.release=13/g' "$GITHUB_WORKSPACE"/${{ env.device }}/vendor/build.prop
          sudo sed -i 's/ro.vendor.build.version.release_or_codename=12/ro.vendor.build.version.release_or_codename=13/g' "$GITHUB_WORKSPACE"/${{ env.device }}/vendor/build.prop
          # 添加cas.xml
          sudo rm -rf "$GITHUB_WORKSPACE"/images/product/etc/device_features/*
          sudo cp -f "$GITHUB_WORKSPACE"/${{ env.device }}_files/${{ env.device }}.xml "$GITHUB_WORKSPACE"/images/product/etc/device_features
          # 删除推广
          sudo rm -rf "$GITHUB_WORKSPACE"/images/product/data-app
          # 添加munch的/system/build.prop
          echo "ro.sf.lcd_density=440" | sudo tee -a "$GITHUB_WORKSPACE"/images/system/system/build.prop
          # 修复NFC
          sudo unzip -o "$GITHUB_WORKSPACE"/${{ env.device }}_files/nfc.zip -d "$GITHUB_WORKSPACE"/images
          echo "persist.sys.disable_rescue=true" | sudo tee -a "$GITHUB_WORKSPACE"/images/system/system/build.prop
          # 替换Overlay
          sudo mv -f "$GITHUB_WORKSPACE"/${{ env.device }}_files/DevicesAndroidOverlay.apk "$GITHUB_WORKSPACE"/images/product/overlay
          sudo mv -f "$GITHUB_WORKSPACE"/${{ env.device }}_files/DevicesOverlay.apk "$GITHUB_WORKSPACE"/images/product/overlay
          sudo mv -f "$GITHUB_WORKSPACE"/${{ env.device }}_files/MiuiFrameworkResOverlay.apk "$GITHUB_WORKSPACE"/images/product/overlay
          sudo mv -f "$GITHUB_WORKSPACE"/${{ env.device }}_files/WeverseOverlay.apk "$GITHUB_WORKSPACE"/images/product/overlay
          # 常规修改
          sudo rm -rf "$GITHUB_WORKSPACE"/${{ env.device }}/vendor/recovery-from-boot.p
          sudo rm -rf "$GITHUB_WORKSPACE"/${{ env.device }}/vendor/bin/install-recovery.sh
          sudo mv -f "$GITHUB_WORKSPACE"/${{ env.device }}_files/vbmeta.img "$GITHUB_WORKSPACE"/${{ env.device }}/firmware-update
          sudo mv -f "$GITHUB_WORKSPACE"/${{ env.device }}_files/vbmeta_system.img "$GITHUB_WORKSPACE"/${{ env.device }}/firmware-update
          sudo unzip -o "$GITHUB_WORKSPACE"/tools/flashtools.zip -d "$GITHUB_WORKSPACE"/images
          sudo cp -r "$GITHUB_WORKSPACE"/${{ env.device }}/firmware-update "$GITHUB_WORKSPACE"/images
          sudo mv -f "$GITHUB_WORKSPACE"/tools/super_empty.img "$GITHUB_WORKSPACE"/images/firmware-update
          sudo cp -r "$GITHUB_WORKSPACE"/${{ env.device }}/* "$GITHUB_WORKSPACE"/images
          sudo rm -rf "$GITHUB_WORKSPACE"/${{ env.device }}
          sudo rm -rf "$GITHUB_WORKSPACE"/images/system/system/app/Updater
      - name: 6.打包
        run: |
          sudo chmod 777 "$GITHUB_WORKSPACE"/tools/mke2fs
          sudo chmod 777 "$GITHUB_WORKSPACE"/tools/e2fsdroid
          sudo chmod 777 "$GITHUB_WORKSPACE"/tools/img2simg
          sudo chmod 777 "$GITHUB_WORKSPACE"/tools/brotli
          sudo chmod 777 "$GITHUB_WORKSPACE"/tools/lpmake
          system_size=$(sudo du -sb "$GITHUB_WORKSPACE"/images/system | awk {'print $1'})
          system_size=$(echo "$system_size + 104857600" | bc)
          system_size=$(echo "$system_size / 4096" | bc)
          vendor_size=$(sudo du -sb "$GITHUB_WORKSPACE"/images/vendor | awk {'print $1'})
          vendor_size=$(echo "$vendor_size + 104857600" | bc)
          vendor_size=$(echo "$vendor_size / 4096" | bc)
          system_ext_size=$(sudo du -sb "$GITHUB_WORKSPACE"/images/system_ext.img | awk {'print $1'})
          #system_ext_size=$(echo "$system_ext_size + 104857600" | bc)
          #system_ext_size=$(echo "$system_ext_size / 4096" | bc)
          product_size=$(sudo du -sb "$GITHUB_WORKSPACE"/images/product | awk {'print $1'})
          product_size=$(echo "$product_size + 104857600" | bc)
          product_size=$(echo "$product_size / 4096" | bc)
          odm_size=$(sudo du -sb "$GITHUB_WORKSPACE"/images/odm.img | awk {'print $1'})
          for i in product vendor system; do
              sudo python3 "$GITHUB_WORKSPACE"/tools/fspatch.py "$GITHUB_WORKSPACE"/images/$i "$GITHUB_WORKSPACE"/images/TI_config/"$i"_fs_config
              "$GITHUB_WORKSPACE"/tools/mke2fs -O ^has_journal -L $i -I 256 -M /$i -m 0 -t ext4 -b 4096 "$GITHUB_WORKSPACE"/images/$i.img $(eval echo "$"$i"_size")
              sudo "$GITHUB_WORKSPACE"/tools/e2fsdroid -e -T 1230768000 -C "$GITHUB_WORKSPACE"/images/TI_config/"$i"_fs_config -S "$GITHUB_WORKSPACE"/images/TI_config/"$i"_file_contexts -f "$GITHUB_WORKSPACE"/images/$i -a /$i "$GITHUB_WORKSPACE"/images/$i.img
              resize2fs -f -M "$GITHUB_WORKSPACE"/images/$i.img
              eval "$i"_size=$(du -sb "$GITHUB_WORKSPACE"/images/$i.img | awk {'print $1'})
              sudo rm -rf "$GITHUB_WORKSPACE"/images/$i
          done
          sudo rm -rf "$GITHUB_WORKSPACE"/images/TI_config
          "$GITHUB_WORKSPACE"/tools/lpmake --metadata-size 65536 --super-name super --block-size 4096 --partition odm:readonly:$odm_size:qti_dynamic_partitions --image odm="$GITHUB_WORKSPACE"/images/odm.img --partition product:readonly:$product_size:qti_dynamic_partitions --image product="$GITHUB_WORKSPACE"/images/product.img --partition system:readonly:$system_size:qti_dynamic_partitions --image system="$GITHUB_WORKSPACE"/images/system.img --partition system_ext:readonly:$system_ext_size:qti_dynamic_partitions --image system_ext="$GITHUB_WORKSPACE"/images/system_ext.img --partition vendor:readonly:$vendor_size:qti_dynamic_partitions --image vendor="$GITHUB_WORKSPACE"/images/vendor.img --device super:9126805504 --metadata-slots 2 --group qti_dynamic_partitions:9126805504 -F --output "$GITHUB_WORKSPACE"/images/super.img
          for i in product system system_ext vendor odm; do
              rm -rf "$GITHUB_WORKSPACE"/images/$i.img
          done
          zstd "$GITHUB_WORKSPACE"/images/super.img -o "$GITHUB_WORKSPACE"/images/super.zst --rm
          sudo 7z a "$GITHUB_WORKSPACE"/zip/miui_CASPRE_${{ env.date }}.zip "$GITHUB_WORKSPACE"/images/*
          sudo rm -rf "$GITHUB_WORKSPACE"/images
          md5=$(md5sum "$GITHUB_WORKSPACE"/zip/miui_CASPRE_${{ env.date }}.zip)
          echo "MD5=${md5:0:32}" >> $GITHUB_ENV
          zipmd5=${md5:0:10}
          mv "$GITHUB_WORKSPACE"/zip/miui_CASPRE_${{ env.date }}.zip "$GITHUB_WORKSPACE"/zip/miui_CASPRE_"${{ env.date }}"_"$zipmd5"_13.0_2in1_Root.zip
          echo "NEW_PACKAGE_NAME=miui_CASPRE_"${{ env.date }}"_"$zipmd5"_13.0_2in1_Root.zip" >> $GITHUB_ENV
      - name: 7.上传到OneDrive
        run: |
          rclone mkdir OneDrive:/MI_Packages/RubbishBin/CAS_Packages
          rclone sync -P ./zip/* OneDrive:/MI_Packages/RubbishBin/CAS_Packages
      - name: 8.发送打包成功通知
        run: |
          curl -i -X POST -H 'Content-type':'application/json' -d '{"token":"${{ secrets.appToken2 }}","title":"小米10 Ultra ${{ env.date }}已构建完成","content":" **小米10 Ultra ${{ env.date }}已构建完成** \n \n **包名：${{ env.NEW_PACKAGE_NAME }}** \n \n **MD5：${{ env.MD5 }}** \n \n **下载地址为：[https://onedrive.zjw.js.cn/Direct/RubbishBin/${{ env.NEW_PACKAGE_NAME }}](https://onedrive.zjw.js.cn/Direct/RubbishBin/${{ env.NEW_PACKAGE_NAME }})** ","topic":"umi","template":"markdown"}' http://www.pushplus.plus/send || true
          echo 上传成功  
      - name: 9.删除工作流运行
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0

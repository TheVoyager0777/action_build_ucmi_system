name: build_umi_system_alipush
on: 
  workflow_dispatch:
    inputs:
      URL:
        description: '待操作的系统包下载地址'     
        required: true
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
       - uses: actions/checkout@master  
       - name: 1.安装依赖
         run: |
            sudo apt install python3 python3-pip aria2 zip p7zip-full tar
            sudo apt --fix-broken install
            sudo apt update --fix-missing
            pip3 install --upgrade pip
            pip3 install aliyundrive-webdav
            pip3 install pycryptodome
            pip3 install docopt
            pip3 install requests
            pip3 install beautifulsoup4
            pip3 install --ignore-installed pyyaml
       - name: 2.下载系统包
         run: |
            aria2c -x16 -j$(nproc) -U "Mozilla/5.0" -d "$GITHUB_WORKSPACE" ${{ github.event.inputs.URL }}
            aria2c -x16 -j$(nproc) -U "Mozilla/5.0" -d "$GITHUB_WORKSPACE" https://hugeota.d.miui.com/22.7.19/miui_UMIPRE_22.7.19_c2ae8f91d4_12.0.zip
       - name: 3.解包
         run: |
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/payload-dumper-go
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/brotli
            mkdir -p "$GITHUB_WORKSPACE"/THYME
            mkdir -p "$GITHUB_WORKSPACE"/UMI
            mkdir -p "$GITHUB_WORKSPACE"/images
            mkdir -p "$GITHUB_WORKSPACE"/simages
            mkdir -p "$GITHUB_WORKSPACE"/zip
            mkdir -p "$GITHUB_WORKSPACE"/firmware
            URL=${{ github.event.inputs.URL }}
            ZIP_NAME_THYME=${URL##*/}
            7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_THYME -r -o"$GITHUB_WORKSPACE"/THYME
            rm -rf "$GITHUB_WORKSPACE"/$ZIP_NAME_THYME
            ZIP_NAME_UMI=miui_UMIPRE_22.7.19_c2ae8f91d4_12.0.zip
            7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_UMI -r -o"$GITHUB_WORKSPACE"/UMI firmware-update
            for i in odm vendor
            do
                7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_UMI -o"$GITHUB_WORKSPACE"/UMI $i.transfer.list
                7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_UMI -o"$GITHUB_WORKSPACE"/UMI $i.patch.dat
                7z x "$GITHUB_WORKSPACE"/$ZIP_NAME_UMI -o"$GITHUB_WORKSPACE"/UMI $i.new.dat.br
            done
            "$GITHUB_WORKSPACE"/tools/brotli -d "$GITHUB_WORKSPACE"/UMI/vendor.new.dat.br
            rm -rf "$GITHUB_WORKSPACE"/UMI/vendor.new.dat.br
            python3 "$GITHUB_WORKSPACE"/tools/sdat2img.py "$GITHUB_WORKSPACE"/UMI/vendor.transfer.list "$GITHUB_WORKSPACE"/UMI/vendor.new.dat "$GITHUB_WORKSPACE"/UMI/vendor.img
            rm -rf "$GITHUB_WORKSPACE"/UMI/vendor.patch.dat
            rm -rf "$GITHUB_WORKSPACE"/UMI/vendor.transfer.list
            rm -rf "$GITHUB_WORKSPACE"/UMI/vendor.new.dat
            sudo python3 "$GITHUB_WORKSPACE"/tools/imgextractorLinux.py "$GITHUB_WORKSPACE"/UMI/vendor.img "$GITHUB_WORKSPACE"/UMI
            rm -rf "$GITHUB_WORKSPACE"/UMI/vendor.img
            for i in system product system_ext
            do
                "$GITHUB_WORKSPACE"/tools/payload-dumper-go -p $i "$GITHUB_WORKSPACE"/THYME/payload.bin
                mv "$GITHUB_WORKSPACE"/payload/$i.img "$GITHUB_WORKSPACE"/images/$i.img
            done
            rm -rf "$GITHUB_WORKSPACE"/payload
            rm -rf "$GITHUB_WORKSPACE"/THYME
            sudo python3 "$GITHUB_WORKSPACE"/tools/imgextractorLinux.py "$GITHUB_WORKSPACE"/images/product.img "$GITHUB_WORKSPACE"/images
            sudo python3 "$GITHUB_WORKSPACE"/tools/imgextractorLinux.py "$GITHUB_WORKSPACE"/images/system.img "$GITHUB_WORKSPACE"/images
            rm -rf "$GITHUB_WORKSPACE"/images/product.img
            rm -rf "$GITHUB_WORKSPACE"/images/system.img
       - name: 4.替换相关文件
         run: |
            sudo rm -rf "$GITHUB_WORKSPACE"/images/product/etc/device_features/*
            sudo rm -rf "$GITHUB_WORKSPACE"/images/product/overlay/DeviceAndroidConfig.apk
            sudo rm -rf "$GITHUB_WORKSPACE"/images/product/overlay/DeviceConfig.apk
            sudo cp -f "$GITHUB_WORKSPACE"/AospFrameworkResOverlay.apk "$GITHUB_WORKSPACE"/images/product/overlay/
            sudo cp -f "$GITHUB_WORKSPACE"/DevicesAndroidOverlay.apk "$GITHUB_WORKSPACE"/images/product/overlay/
            sudo cp -f "$GITHUB_WORKSPACE"/DevicesOverlay.apk "$GITHUB_WORKSPACE"/images/product/overlay/
            sudo cp -f "$GITHUB_WORKSPACE"/umi.xml "$GITHUB_WORKSPACE"/images/product/etc/device_features/
            sudo rm -rf "$GITHUB_WORKSPACE"/images/system/system/data-app
            sudo rm -rf "$GITHUB_WORKSPACE"/UMI/vendor/recovery-from-boot.p
            sudo rm -rf "$GITHUB_WORKSPACE"/UMI/vendor/bin/install-recovery.sh
            sudo mv -f "$GITHUB_WORKSPACE"/vbmeta.img "$GITHUB_WORKSPACE"/UMI/firmware-update
            sudo mv -f "$GITHUB_WORKSPACE"/vbmeta_system.img "$GITHUB_WORKSPACE"/UMI/firmware-update
            sudo cp -r "$GITHUB_WORKSPACE"/UMI/firmware-update "$GITHUB_WORKSPACE"/images
            sudo tar -zxvf "$GITHUB_WORKSPACE"/boot.tar.gz -C "$GITHUB_WORKSPACE"/images
            sudo cp -r "$GITHUB_WORKSPACE"/META-INF "$GITHUB_WORKSPACE"/images
            sudo cp -f "$GITHUB_WORKSPACE"/dynamic_partitions_op_list "$GITHUB_WORKSPACE"/images
            sudo cp -r "$GITHUB_WORKSPACE"/UMI/* "$GITHUB_WORKSPACE"/images
            sudo rm -rf "$GITHUB_WORKSPACE"/UMI
       - name: 5.打包
         run: |
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/mke2fs
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/e2fsdroid
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/img2simg
            sudo chmod 777 "$GITHUB_WORKSPACE"/tools/brotli
            URL=${{ github.event.inputs.URL }}
            DATE=${URL%/*}
            date=${DATE##*/}
            product_size=$(sudo du -sb "$GITHUB_WORKSPACE"/images/product | awk {'print $1'})
            product_size=$(echo "$product_size + 20971520" | bc)
            product_size=$(echo "$product_size / 4096" | bc)
            vendor_size=$(sudo du -sb "$GITHUB_WORKSPACE"/images/vendor | awk {'print $1'})
            vendor_size=$(echo "$vendor_size + 15728640" | bc)
            vendor_size=$(echo "$vendor_size / 4096" | bc)
            system_size=$(sudo du -sb "$GITHUB_WORKSPACE"/images/system | awk {'print $1'})
            system_size=$(echo "$system_size + 103809024" | bc)
            system_size=$(echo "$system_size / 4096" | bc)
            system_ext_size=$(sudo du -sb "$GITHUB_WORKSPACE"/images/system_ext.img | awk {'print $1'})
            UTC=$(date -u +%s)
            for i in product vendor system
            do
                sudo python3 "$GITHUB_WORKSPACE"/tools/fspatch.py "$GITHUB_WORKSPACE"/images/$i "$GITHUB_WORKSPACE"/images/TI_config/"$i"_fs_config
                "$GITHUB_WORKSPACE"/tools/mke2fs -O ^has_journal -L $i -I 256 -M /$i -m 0 -t ext4 -b 4096 "$GITHUB_WORKSPACE"/images/$i.img $(eval echo "$"$i"_size")
                sudo "$GITHUB_WORKSPACE"/tools/e2fsdroid -e -T $UTC -C "$GITHUB_WORKSPACE"/images/TI_config/"$i"_fs_config -S "$GITHUB_WORKSPACE"/images/TI_config/"$i"_file_contexts -f "$GITHUB_WORKSPACE"/images/$i -a /$i "$GITHUB_WORKSPACE"/images/$i.img
                resize2fs -f -M "$GITHUB_WORKSPACE"/images/$i.img
                eval "$i"_size=$(du -sb "$GITHUB_WORKSPACE"/images/$i.img | awk {'print $1'})
                sudo rm -rf "$GITHUB_WORKSPACE"/images/$i
            done
            sudo rm -rf "$GITHUB_WORKSPACE"/images/TI_config
            for i in product system system_ext vendor
            do
                "$GITHUB_WORKSPACE"/tools/img2simg "$GITHUB_WORKSPACE"/images/$i.img "$GITHUB_WORKSPACE"/simages/$i.img
                rm -rf "$GITHUB_WORKSPACE"/images/$i.img
                python3 "$GITHUB_WORKSPACE"/tools/img2sdat.py "$GITHUB_WORKSPACE"/simages/$i.img -o "$GITHUB_WORKSPACE"/simages/ -v 4 -p $i
                rm -rf "$GITHUB_WORKSPACE"/simages/$i.img
                "$GITHUB_WORKSPACE"/tools/brotli -q 5 "$GITHUB_WORKSPACE"/simages/$i.new.dat -o "$GITHUB_WORKSPACE"/images/$i.new.dat.br
                mv "$GITHUB_WORKSPACE"/simages/$i.transfer.list "$GITHUB_WORKSPACE"/simages/$i.patch.dat "$GITHUB_WORKSPACE"/images
                rm -rf "$GITHUB_WORKSPACE"/simages/$i.new.dat
            done
            rm -rf "$GITHUB_WORKSPACE"/simages
            sed -i "s/product_size/$product_size/g" "$GITHUB_WORKSPACE"/images/dynamic_partitions_op_list
            sed -i "s/vendor_size/$vendor_size/g" "$GITHUB_WORKSPACE"/images/dynamic_partitions_op_list
            sed -i "s/system_size/$system_size/g" "$GITHUB_WORKSPACE"/images/dynamic_partitions_op_list
            sed -i "s/system_ext_size/$system_ext_size/g" "$GITHUB_WORKSPACE"/images/dynamic_partitions_op_list
            sudo 7z a "$GITHUB_WORKSPACE"/zip/miui_UMIPRE_$date.zip "$GITHUB_WORKSPACE"/images/*
            sudo rm -rf "$GITHUB_WORKSPACE"/images
            md5=$(md5sum "$GITHUB_WORKSPACE"/zip/miui_UMIPRE_$date.zip)
            zipmd5=${md5:0:10}
            mv "$GITHUB_WORKSPACE"/zip/miui_UMIPRE_$date.zip "$GITHUB_WORKSPACE"/zip/miui_UMIPRE_"$date"_"$zipmd5"_12.0.pdf
       - name: 6.上传到阿里云盘
         run: |
            curl https://rclone.org/install.sh | sudo bash
            mkdir -p ~/.config/rclone/
            unzip -P ${{ secrets.PASSWORD }} "$GITHUB_WORKSPACE"/tools/rclone.zip -d ~/.config/rclone/
            nohup aliyundrive-webdav --refresh-token ${{ secrets.REFRESHTOKEN }} --host 127.0.0.1 --port 5244 --auth-user yzdhz --auth-password ${{ secrets.PASSWORD }} >/dev/null 2>& 1 &
            rclone mkdir aliyun:/UMI_Package
            rclone sync -P ./zip/* aliyun:/UMI_Package
       - name: 7.删除工作流运行
         uses: Mattraks/delete-workflow-runs@v2
         with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0
